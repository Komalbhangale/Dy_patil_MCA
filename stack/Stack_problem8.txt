You are given the head of a linked list.

Remove every node which has a node with a greater value anywhere to the right side of it.

Return the head of the modified linked list.

 

Example 1:


Input: head = [5,2,13,3,8]
Output: [13,8]
Explanation: The nodes that should be removed are 5, 2 and 3.
- Node 13 is to the right of node 5.
- Node 13 is to the right of node 2.
- Node 8 is to the right of node 3.
Example 2:

Input: head = [1,1,1,1]
Output: [1,1,1,1]
Explanation: Every node has value 1, so no nodes are removed.
 

Constraints:

The number of the nodes in the given list is in the range [1, 105].
1 <= Node.val <= 105

_______________________________________________________________________________________

Practice using java:

class ListNode {
    int val;
    ListNode next;
    ListNode(int val) {
        this.val = val;
        this.next = null;
    }
}

public class Solution {
    public ListNode removeNodes(ListNode head) {
		
	//write your logic here
           }
    }

    public static void main(String[] args) {
        Solution solution = new Solution();

        // Example 1
        ListNode head1 = new ListNode(5);
        head1.next = new ListNode(2);
        head1.next.next = new ListNode(13);
        head1.next.next.next = new ListNode(3);
        head1.next.next.next.next = new ListNode(8);
        ListNode result1 = solution.removeNodes(head1);
        printList(result1);  // Output: [13, 8]

        // Example 2
        ListNode head2 = new ListNode(1);
        head2.next = new ListNode(1);
        head2.next.next = new ListNode(1);
        head2.next.next.next = new ListNode(1);
        ListNode result2 = solution.removeNodes(head2);
        printList(result2);  // Output: [1, 1, 1, 1]
    }

    private static void printList(ListNode head) {
        while (head != null) {
            System.out.print(head.val + " ");
            head = head.next;
        }
        System.out.println();
    }
}

_____________________________________________________________________________________
Practice in python:

class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

class Solution:
    def removeNodes(self, head: ListNode) -> ListNode:

	#write your logic here
        
def printList(head: ListNode):
    current = head
    while current:
        print(current.val, end=" ")
        current = current.next
    print()

# Example usage
solution = Solution()

# Example 1
head1 = ListNode(5, ListNode(2, ListNode(13, ListNode(3, ListNode(8)))))
result1 = solution.removeNodes(head1)
printList(result1)  # Output: [13, 8]

# Example 2
head2 = ListNode(1, ListNode(1, ListNode(1, ListNode(1))))
result2 = solution.removeNodes(head2)
printList(result2)  # Output: [1, 1, 1, 1]
